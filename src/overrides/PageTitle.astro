---
import { PAGE_TITLE_ID } from '../constants'

const {
  entry: {
    data: { title, template, description, links },
  },
} = Astro.locals.starlightRoute
---

{
  template === 'doc' && (
    <button class="breadcrumb" popovertargetaction="toggle" popovertarget="drawer">
      <svg
        class="menu-icon"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9h16.5m-16.5 6.75h16.5" />
      </svg>
      <div class="truncate">Docs</div>
      <svg
        class="arrow-icon"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="m9 18 6-6-6-6" />
      </svg>
      <div class="text-foreground">{title}</div>
      <span class="sr-only">Toggle Menu</span>
    </button>
  )
}

<h1 id={PAGE_TITLE_ID}>{title}</h1>
{description && <p>{description}</p>}

{
  links && (
    <div class="links">
      {links.doc && (
        <a href={links.doc} target="_blank" rel="noreferrer">
          {Astro.locals.t('black.links.doc')}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="0.75rem"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M15 3h6v6" />
            <path d="M10 14 21 3" />
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
          </svg>
        </a>
      )}

      {links.api && (
        <a href={links.api} target="_blank" rel="noreferrer">
          {Astro.locals.t('black.links.api')}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="0.75rem"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M15 3h6v6" />
            <path d="M10 14 21 3" />
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
          </svg>
        </a>
      )}
    </div>
  )
}

<style>
  .breadcrumb {
    all: unset;
    color: var(--muted-foreground);
    line-height: 1;
    font-size: 0.875rem;
    align-items: center;
    display: flex;
    margin-bottom: 1rem;
    cursor: pointer;
    width: 100%;
    text-align: left;
  }

  @media (min-width: 768px) {
    .breadcrumb {
      cursor: default;
      pointer-events: none;
    }
  }

  .truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .menu-icon {
    width: 1.5rem;
    height: 1.5rem;
    margin-right: 0.5rem;
  }

  @media (min-width: 768px) {
    .menu-icon {
      display: none;
    }
  }

  .arrow-icon {
    width: 0.875rem;
    height: 0.875rem;
    margin-left: 0.5rem;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .text-foreground {
    color: var(--foreground);
    margin-left: 0.5rem;
  }

  h1 {
    letter-spacing: -0.025em;
    font-weight: 700;
    font-size: 1.875rem;
    line-height: 2.25rem;
    scroll-margin: 5rem;
    margin: 0;
  }

  p {
    margin: 0;
    margin-top: 0.5rem;
    color: var(--muted-foreground);
    font-size: 1rem;
    line-height: 1.5rem;
    text-wrap: balance;
  }

  .links {
    padding-top: 1rem;
    align-items: center;
    display: flex;
  }

  .links > a {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.15s;
    color: var(--secondary-foreground);
    font-weight: 600;
    font-size: 0.75rem;
    line-height: 1rem;
    padding-top: 0.125rem;
    padding-bottom: 0.125rem;
    padding-left: 0.625rem;
    padding-right: 0.625rem;
    background-color: var(--secondary);
    border-radius: calc(var(--radius) - 2px);
    gap: 0.25rem;
    align-items: center;
    display: inline-flex;
    text-decoration: inherit;
  }

  .links > a:not(:first-child) {
    margin-right: 0.5rem;
    margin-left: 0.5rem;
  }
</style>
